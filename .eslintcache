[{"/Users/xuanxuan/React-Redux/widgets/src/index.js":"1","/Users/xuanxuan/React-Redux/widgets/src/App.js":"2","/Users/xuanxuan/React-Redux/widgets/src/components/Accordion.js":"3","/Users/xuanxuan/React-Redux/widgets/src/components/Search.js":"4","/Users/xuanxuan/React-Redux/widgets/src/components/Dropdown.js":"5","/Users/xuanxuan/React-Redux/widgets/src/components/Translate.js":"6","/Users/xuanxuan/React-Redux/widgets/src/components/Convert.js":"7","/Users/xuanxuan/React-Redux/widgets/src/components/Route.js":"8"},{"size":145,"mtime":1610683869001,"results":"9","hashOfConfig":"10"},{"size":1967,"mtime":1611078041112,"results":"11","hashOfConfig":"10"},{"size":937,"mtime":1610687163327,"results":"12","hashOfConfig":"10"},{"size":3332,"mtime":1610772091298,"results":"13","hashOfConfig":"10"},{"size":2202,"mtime":1611071673271,"results":"14","hashOfConfig":"10"},{"size":903,"mtime":1611074228435,"results":"15","hashOfConfig":"10"},{"size":1271,"mtime":1611075372889,"results":"16","hashOfConfig":"10"},{"size":459,"mtime":1611077765375,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"6nu9af",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/xuanxuan/React-Redux/widgets/src/index.js",[],["36","37"],"/Users/xuanxuan/React-Redux/widgets/src/App.js",["38","39","40","41"],"/Users/xuanxuan/React-Redux/widgets/src/components/Accordion.js",[],"/Users/xuanxuan/React-Redux/widgets/src/components/Search.js",["42"],"import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { queryAllByAltText } from '@testing-library/react';\n\nexport default function Search() {\n\n  const [term, setTerm] = useState('programming'); //giving a default search term because srsearch param has to be set\n  //const [term, setTerm] = useState(''); //if you default term to '', make sure to only perform search() when term is defined\n  \n  const [debouncedTerm, setDebouncedTerm] = useState(term);\n  \n  const [results, setResults] = useState([]);\n  \n\n  //you are NOT allowed to mark the function inside useEffect as async await! => work around by \n  //1. create helper function with async await, and call it. OR\n  //2. immediately invoked function(which can be (async...await...) wrapped in parenthesis). OR\n  //3. use Promises\n\n  //useEffect can't return anything except functions\n  useEffect(()=>{\n\n    const timerId = setTimeout(()=>{\n      setDebouncedTerm(term); //update debouncedTerm to be term\n    }, 1000);\n\n    return () => {\n      clearTimeout(timerId);\n    };\n\n }, [term] );\n\n useEffect(() => {\n\n  const search = async() => {\n    const {data} = await axios.get('https://en.wikipedia.org/w/api.php', {\n      params: {\n        action: 'query',\n        list: 'search',\n        origin: '*',\n        format: 'json',\n        srsearch: debouncedTerm,\n      }\n    });\n    setResults(data.query.search); //causes results to re-render\n  };\n\n    search();\n\n }, [debouncedTerm])\n\n  // useEffect(() => {\n\n  //   // console.log('initial render or term was changed');\n    \n  //   // return () => {\n  //   //   console.log('CLEANUP')\n  //   // }\n  //   // ^^^ example: intial render: logs 'initial render or term was changed' & return the cleanup function (not invoked yet)\n  //   //every re-render: invoke the cleanup function  -  logs 'initial...or...term...changed' - return cleanup function\n\n    \n\n  //   if (term && !results.length) {\n\n  //     search();\n\n  //   } else {\n\n  //     const timeoutId = setTimeout(() => {\n  //       if(term) {\n  //         search();\n  //       }\n  //     }, 1000);\n\n  //     return () => {\n  //       clearTimeout(timeoutId);\n  //     };\n  //   }\n\n  // }, [term]);\n\n  const renderedResults = results.map(result => {\n    return (\n      <div key={result.pageid} className=\"item\">\n        <div className=\"right floated content\">\n          <a \n            className=\"ui button\"\n            href={`https://en.wikipedia.org?curid=${result.pageid}`}//go to that wiki page\n          >\n            Go\n          </a>\n        </div>\n        <div className=\"content\">\n          <div className=\"header\">\n            {result.title}\n          </div>\n          <span dangerouslySetInnerHTML={{ __html: result.snippet }}></span> \n          {/* ^ this tells the result to be rendered as html instead of plain texts, \n          but DON't do this, cuz you can be subject to XSS attack(milicious js script can execute) */}\n        </div>\n      </div>\n    )\n  })\n\n  return (\n    <div>\n      <div className=\"ui form\">\n        <div className=\"field\">\n          <label>Enter Search Term</label>\n          <input \n          value={term}\n          onChange={(evt) => setTerm(evt.target.value)}\n          className=\"input\"\n          />\n        </div>\n      </div>\n      <div className=\"ui celled list\">{renderedResults}</div>\n    </div>\n  )\n}\n","/Users/xuanxuan/React-Redux/widgets/src/components/Dropdown.js",[],"/Users/xuanxuan/React-Redux/widgets/src/components/Translate.js",[],"/Users/xuanxuan/React-Redux/widgets/src/components/Convert.js",[],"/Users/xuanxuan/React-Redux/widgets/src/components/Route.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":38,"column":7,"nodeType":"49","messageId":"50","endLine":38,"endColumn":20},{"ruleId":"47","severity":1,"message":"51","line":44,"column":7,"nodeType":"49","messageId":"50","endLine":44,"endColumn":15},{"ruleId":"47","severity":1,"message":"52","line":50,"column":7,"nodeType":"49","messageId":"50","endLine":50,"endColumn":19},{"ruleId":"47","severity":1,"message":"53","line":56,"column":7,"nodeType":"49","messageId":"50","endLine":56,"endColumn":20},{"ruleId":"47","severity":1,"message":"54","line":3,"column":10,"nodeType":"49","messageId":"50","endLine":3,"endColumn":27},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'showAccordion' is assigned a value but never used.","Identifier","unusedVar","'showList' is assigned a value but never used.","'showDropdown' is assigned a value but never used.","'showTranslate' is assigned a value but never used.","'queryAllByAltText' is defined but never used.","no-global-assign","no-unsafe-negation"]